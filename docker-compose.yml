services:
  webapp:
    container_name: ros2_lab_webapp
    network_mode: host
    build:
      context: .
      target: dev
      dockerfile: Dockerfile.webapp
    restart: always
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./webapp:/app
      - ./webapp/node_modules:/app/node_modules
      - ./webapp/.next:/app/.next

  websocket:
    container_name: ros2_lab_websocket
    build:
      context: . # Build context (optional, defaults to current directory)
      dockerfile: Dockerfile.websocket
    restart: unless-stopped
    privileged: true
    network_mode: host
    ipc: host
    pid: host
    command: ros2 launch rosbridge_server rosbridge_websocket_launch.xml namespace:=${USER}
    environment:
      - "ROBOTNAME=${ROBOTNAME}"
      - "ROS_DOMAIN_ID=4"
      - "RMW_IMPLEMENTATION=rmw_cyclonedds_cpp"
      - CYCLONEDDS_URI=file:///cyclone_profile.xml
    volumes:
      - /home/robotaa/cyclone_profile.xml:/cyclone_profile.xml

  webrtc:
    container_name: ros2_lab_webrtc
    build:
      context: . # Build context (optional, defaults to current directory)
      dockerfile: Dockerfile.webrtc
    restart: unless-stopped
    privileged: true
    network_mode: host
    ipc: host
    pid: host
    command: python3 webrtc_server.py
    environment:
      - "ROBOTNAME=${ROBOTNAME}"
      - "ROS_DOMAIN_ID=4"
      - "RMW_IMPLEMENTATION=rmw_cyclonedds_cpp"
      - CYCLONEDDS_URI=file:///cyclone_profile.xml
    volumes:
      - /home/robotaa/cyclone_profile.xml:/cyclone_profile.xml #- ./webrtc/webrtc_server.py:/ws_webrtc/webrtc_server.py
      - ./webrtc/:/ws_webrtc/

  bagapi:
    container_name: ros2_lab_bagapi
    build:
      context: . # Build context (optional, defaults to current directory)
      dockerfile: Dockerfile.bagapi
    restart: unless-stopped
    network_mode: host
    volumes:
      - /ssd/bags:/app/bags
